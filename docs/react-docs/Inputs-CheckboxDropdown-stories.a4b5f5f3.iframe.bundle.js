"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[5129],{"./stories/Inputs/CheckboxDropdown.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DefaultVariant:()=>DefaultVariant,Disabled:()=>Disabled,MultipleSelection:()=>MultipleSelection,PrimaryVariant:()=>PrimaryVariant,SecondaryVariant:()=>SecondaryVariant,WithFilter:()=>WithFilter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CheckboxDropdown_stories});var react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("../react/src/CallsToAction/Button/index.js"),InputSingleLine=__webpack_require__("../react/src/Inputs/InputSingleLine/index.js"),Checkbox=__webpack_require__("../react/src/Inputs/Checkbox/index.js"),Icon=__webpack_require__("../react/src/Icon.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||_unsupported_iterable_to_array(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _to_consumable_array(arr){return function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}(arr)||function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupported_iterable_to_array(arr)||function _non_iterable_spread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_array_like_to_array(o,minLen):void 0}}var CheckBoxDropdown=function(param){var id=param.id,_param_label=param.label,label=void 0===_param_label?"Select Multiple options":_param_label,_param_filterLabel=param.filterLabel,filterLabel=void 0===_param_filterLabel?"Filter options":_param_filterLabel,_param_selectedItemsLabel=param.selectedItemsLabel,selectedItemsLabel=void 0===_param_selectedItemsLabel?function(count){return"".concat(count," Item").concat(count>1?"s":""," selected")}:_param_selectedItemsLabel,_param_variant=param.variant,variant=void 0===_param_variant?"default":_param_variant,_param_checkBoxOptions=param.checkBoxOptions,checkBoxOptions=void 0===_param_checkBoxOptions?[]:_param_checkBoxOptions,_param_enableFilter=param.enableFilter,enableFilter=void 0!==_param_enableFilter&&_param_enableFilter,_param_disabled=param.disabled,disabled=void 0!==_param_disabled&&_param_disabled,_param_defaultValue=param.defaultValue,defaultValue=void 0===_param_defaultValue?[]:_param_defaultValue,onChange=param.onChange,_useState=_sliced_to_array((0,react.useState)(defaultValue),2),selectedOptions=_useState[0],setSelectedOptions=_useState[1],_useState1=_sliced_to_array((0,react.useState)(!1),2),showDropdown=_useState1[0],setShowDropdown=_useState1[1],_useState2=_sliced_to_array((0,react.useState)(""),2),filterText=_useState2[0],setFilterText=_useState2[1],dropdownId=(0,react.useId)(),buttonId=(0,react.useId)(),dropdownRef=(0,react.useRef)(null);(0,react.useEffect)((function(){var handleClickOutside=function(event){dropdownRef.current&&!dropdownRef.current.contains(event.target)&&setShowDropdown(!1)};return document.addEventListener("mousedown",handleClickOutside),function(){document.removeEventListener("mousedown",handleClickOutside)}}),[dropdownRef]);var filteredOptions=checkBoxOptions.filter((function(option){return option.label.toLowerCase().includes(filterText.toLowerCase())}));return react.createElement("div",{className:"relative inline-block text-left",ref:dropdownRef},react.createElement(Button.A,{id:buttonId,onClick:function(){disabled||setShowDropdown(!showDropdown)},variant,disabled,label:function(){if(0===selectedOptions.length)return label;if(1===selectedOptions.length){var selectedItem=checkBoxOptions.find((function(option){return option.value===selectedOptions[0]}));return selectedItem?selectedItem.label:label}return selectedItemsLabel(selectedOptions.length)}(),rightIcon:react.createElement(Icon.A,{type:"chevronDown",variant:"filled",size:16})}),showDropdown&&!disabled&&react.createElement("div",{id:dropdownId,className:"absolute z-10 w-48 bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600"},enableFilter&&react.createElement("div",{className:"p-2"},react.createElement(InputSingleLine.A,{fieldId:"".concat(id,"-filter-input"),value:filterText,onChange:function(e){return setFilterText(e.target.value)},placeholder:filterLabel,disabled})),react.createElement("ul",{className:"p-3 space-y-3 text-sm text-gray-700 dark:text-gray-200","aria-labelledby":buttonId},filteredOptions.map((function(option,index){return react.createElement("li",{key:index},react.createElement(Checkbox.A,{name:"option_".concat(index),label:option.label,checked:selectedOptions.includes(option.value),onChange:function(){return value=option.value,updatedSelection=selectedOptions.includes(value)?selectedOptions.filter((function(option){return option!==value})):_to_consumable_array(selectedOptions).concat([value]),setSelectedOptions(updatedSelection),void(onChange&&onChange(updatedSelection));var value,updatedSelection},disabled:option.disabled||disabled}))}))),0===filteredOptions.length&&react.createElement("div",{className:"p-2 text-sm text-gray-500 dark:text-gray-400"},"No options found")))};const CheckBoxDropdown_CheckBoxDropdown=CheckBoxDropdown;function CheckboxDropdown_stories_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function CheckboxDropdown_stories_sliced_to_array(arr,i){return function CheckboxDropdown_stories_array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function CheckboxDropdown_stories_iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function CheckboxDropdown_stories_unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return CheckboxDropdown_stories_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return CheckboxDropdown_stories_array_like_to_array(o,minLen)}(arr,i)||function CheckboxDropdown_stories_non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}CheckBoxDropdown.__docgenInfo={description:"",methods:[],displayName:"CheckBoxDropdown",props:{label:{defaultValue:{value:"'Select Multiple options'",computed:!1},required:!1},filterLabel:{defaultValue:{value:"'Filter options'",computed:!1},required:!1},selectedItemsLabel:{defaultValue:{value:"(count) => `${count} Item${count > 1 ? 's' : ''} selected`",computed:!1},required:!1},variant:{defaultValue:{value:"'default'",computed:!1},required:!1},checkBoxOptions:{defaultValue:{value:"[]",computed:!1},required:!1},enableFilter:{defaultValue:{value:"false",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},defaultValue:{defaultValue:{value:"[]",computed:!1},required:!1}}};const CheckboxDropdown_stories={title:"Inputs/TwixtCheckboxDropdown",component:CheckBoxDropdown_CheckBoxDropdown,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{defaultSelected:{control:"array",description:"The default selected checkbox options",defaultValue:["Books"]},selectedItemsLabel:{control:"text",description:"Custom label for selected items",defaultValue:function(count){return"".concat(count," Item").concat(count>1?"s":""," selected")}}},args:{}};var Template=function(args){var _useState=CheckboxDropdown_stories_sliced_to_array((0,react.useState)(args.defaultValue||[]),2),selected=_useState[0],setSelected=_useState[1];return react.createElement(CheckBoxDropdown_CheckBoxDropdown,function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({checkBoxOptions:[{label:"Books",value:"Books",disabled:!1},{label:"Electronics",value:"Electronics",disabled:!1},{label:"Clothing",value:"Clothing",disabled:!1},{label:"Home Appliances",value:"Home Appliances",disabled:!1},{label:"Groceries",value:"Groceries",disabled:!1},{label:"Toys",value:"Toys",disabled:!1}],onChange:function(updatedSelection){setSelected(updatedSelection)},defaultValue:selected},args))},Default=Template.bind({});Default.args={defaultValue:["Books"]};var DefaultVariant=Template.bind({});DefaultVariant.args={defaultValue:["Books"],variant:"default"};var PrimaryVariant=Template.bind({});PrimaryVariant.args={defaultValue:["Electronics"],variant:"primary"};var SecondaryVariant=Template.bind({});SecondaryVariant.args={defaultValue:["Clothing"],variant:"secondary"};var WithFilter=Template.bind({});WithFilter.args={defaultValue:["Groceries"],enableFilter:!0};var Disabled=Template.bind({});Disabled.args={defaultValue:["Toys"],disabled:!0};var MultipleSelection=Template.bind({});MultipleSelection.args={defaultValue:["Books","Electronics","Clothing"],selectedItemsLabel:function(count){return"".concat(count," categories selected")}};const __namedExportsOrder=["Default","DefaultVariant","PrimaryVariant","SecondaryVariant","WithFilter","Disabled","MultipleSelection"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...Default.parameters?.docs?.source}}},DefaultVariant.parameters={...DefaultVariant.parameters,docs:{...DefaultVariant.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...DefaultVariant.parameters?.docs?.source}}},PrimaryVariant.parameters={...PrimaryVariant.parameters,docs:{...PrimaryVariant.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...PrimaryVariant.parameters?.docs?.source}}},SecondaryVariant.parameters={...SecondaryVariant.parameters,docs:{...SecondaryVariant.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...SecondaryVariant.parameters?.docs?.source}}},WithFilter.parameters={...WithFilter.parameters,docs:{...WithFilter.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...WithFilter.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...Disabled.parameters?.docs?.source}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:"args => {\n  const [selected, setSelected] = useState(args.defaultValue || []);\n  const handleCheckboxChange = updatedSelection => {\n    setSelected(updatedSelection);\n  };\n  const options = [{\n    label: 'Books',\n    value: 'Books',\n    disabled: false\n  }, {\n    label: 'Electronics',\n    value: 'Electronics',\n    disabled: false\n  }, {\n    label: 'Clothing',\n    value: 'Clothing',\n    disabled: false\n  }, {\n    label: 'Home Appliances',\n    value: 'Home Appliances',\n    disabled: false\n  }, {\n    label: 'Groceries',\n    value: 'Groceries',\n    disabled: false\n  }, {\n    label: 'Toys',\n    value: 'Toys',\n    disabled: false\n  }];\n  return <TwixtCheckBoxDropdown checkBoxOptions={options} onChange={handleCheckboxChange} defaultValue={selected} {...args} />;\n}",...MultipleSelection.parameters?.docs?.source}}}},"../react/src/Inputs/Checkbox/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>TwixtCheckbox});var react=__webpack_require__("./node_modules/react/index.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function TwixtCheckbox(param){var _param_checked=param.checked,checked=void 0!==_param_checked&&_param_checked,label=param.label,description=param.description,children=param.children,_param_position=param.position,position=void 0===_param_position?"left":_param_position,_param_disabled=param.disabled,disabled=void 0!==_param_disabled&&_param_disabled,_param_indeterminate=param.indeterminate,indeterminate=void 0!==_param_indeterminate&&_param_indeterminate,_param_onChange=param.onChange,onChange=void 0===_param_onChange?function(){}:_param_onChange,_param_overwriteClass=param.overwriteClass,overwriteClass=void 0===_param_overwriteClass?"":_param_overwriteClass,_param_checkboxColor=param.checkboxColor,checkboxColor=void 0===_param_checkboxColor?"text-blue-600":_param_checkboxColor,_useState=_sliced_to_array((0,react.useState)(checked),2),isChecked=_useState[0],setIsChecked=_useState[1];(0,react.useEffect)((function(){setIsChecked(checked)}),[checked]);var handleCheckboxChange=function(event){setIsChecked(event.target.checked),onChange(event.target.checked)},checkboxRef=react.useRef(null);(0,react.useEffect)((function(){checkboxRef.current&&(checkboxRef.current.indeterminate=indeterminate)}),[indeterminate]);var defaultClasses="form-checkbox h-5 w-5 mt-0.5 border-gray-200 rounded ".concat(checkboxColor," focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none disabled:cursor-not-allowed \n    dark:bg-neutral-800 dark:border-neutral-700 dark:checked:bg-blue-500 dark:checked:border-blue-500 dark:focus:ring-offset-gray-800 ").concat(overwriteClass);return react.createElement("label",{className:"inline-flex items-center space-x-3 cursor-pointer"},"left"===position&&react.createElement("input",{type:"checkbox",ref:checkboxRef,checked:isChecked,onChange:handleCheckboxChange,disabled,className:defaultClasses}),react.createElement("div",{className:"ms-3 flex flex-col ".concat("right"===position?"me-auto":"")},label&&react.createElement("span",{className:"text-sm font-medium ".concat(disabled?"text-gray-400":"text-gray-700"," dark:text-neutral-400")},label),description&&react.createElement("span",{className:"text-xs ".concat(disabled?"text-gray-400":"text-gray-500"," dark:text-neutral-500")},description),children),"right"===position&&react.createElement("input",{type:"checkbox",ref:checkboxRef,checked:isChecked,onChange:handleCheckboxChange,disabled,className:defaultClasses}))}TwixtCheckbox.__docgenInfo={description:"",methods:[],displayName:"TwixtCheckbox",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1},position:{defaultValue:{value:"'left'",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},indeterminate:{defaultValue:{value:"false",computed:!1},required:!1},onChange:{defaultValue:{value:"() => {}",computed:!1},required:!1},overwriteClass:{defaultValue:{value:"''",computed:!1},required:!1},checkboxColor:{defaultValue:{value:"'text-blue-600'",computed:!1},required:!1}}}}}]);