"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[8945],{"./stories/_Deprecated/CopyLink.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,copyProps:()=>copyProps,default:()=>CopyLink_stories});var react=__webpack_require__("./node_modules/react/index.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Tooltip=function(param){var message=param.message,tooltipClass=param.tooltipClass;return react.createElement("span",{className:tooltipClass},message)},CopyLink=function(param){var text=param.text,url=param.url,overwriteClass=param.overwriteClass,overwriteTooltipClass=param.overwriteTooltipClass,_useState=_sliced_to_array((0,react.useState)("Copy to Clipboard"),2),tooltipMessage=_useState[0],setTooltipMessage=_useState[1],linkRef=(0,react.useRef)(null),linkClass=overwriteClass||"text-blue-500 underline",tooltipClass=overwriteTooltipClass||"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 text-white bg-black rounded text-sm opacity-0 transition-opacity duration-300 group-hover:opacity-100";return react.createElement("div",null,react.createElement("a",{href:url,ref:linkRef,onClick:function(e){e.preventDefault();var link=linkRef.current.href;navigator.clipboard.writeText(link).then((function(){setTooltipMessage("Copied ".concat(link)),setTimeout((function(){return setTooltipMessage("Copy to Clipboard")}),2e3)})).catch((function(err){console.error("Failed to copy: ",err)}))},className:linkClass},text),react.createElement(Tooltip,{message:tooltipMessage,tooltipClass}))};const _deprecated_CopyLink=CopyLink;CopyLink.__docgenInfo={description:"",methods:[],displayName:"CopyLink"};const CopyLink_stories={title:"Common/TwixtCopyLink",component:_deprecated_CopyLink,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{}};var copyProps={args:{text:"copy link",url:"www.example.com"}};const __namedExportsOrder=["copyProps"];copyProps.parameters={...copyProps.parameters,docs:{...copyProps.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'copy link',\n    url: 'www.example.com'\n  }\n}",...copyProps.parameters?.docs?.source}}}}}]);