"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[3773],{"./stories/Inputs/InputSingleLine.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoGrowWidth:()=>AutoGrowWidth,Default:()=>Default,Disabled:()=>Disabled,ErrorState:()=>ErrorState,InfoState:()=>InfoState,Search:()=>Search,SuccessState:()=>SuccessState,WarningState:()=>WarningState,WithLeftIcon:()=>WithLeftIcon,WithRightIcon:()=>WithRightIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_react_src_Inputs_InputSingleLine__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../react/src/Inputs/InputSingleLine/index.js"),_react_src_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../react/src/Icon.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/TwixtInputSingleLine",component:_react_src_Inputs_InputSingleLine__WEBPACK_IMPORTED_MODULE_1__.A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{}};var Template=function(args){var _useState=_sliced_to_array((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),2),value=_useState[0],setValue=_useState[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_src_Inputs_InputSingleLine__WEBPACK_IMPORTED_MODULE_1__.A,_object_spread_props(function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({},args),{value,onChange:function(e){setValue(e.target.value)}}))},Default=Template.bind({});Default.args={label:"Firstname",placeholder:"Enter your firstname"};var Search=Template.bind({});Search.args={label:"Search",placeholder:"Enter your firstname",leftIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_src_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{type:"magnifier",variant:"filled",size:16})};var Disabled=Template.bind({});Disabled.args={label:"Old Username",value:"Disabled input",placeholder:"Enter username expired",disabled:!0};var WithLeftIcon=Template.bind({});WithLeftIcon.args={placeholder:"Enter text",leftIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_src_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{type:"userAvatar",variant:"filled",size:16})};var WithRightIcon=Template.bind({});WithRightIcon.args={placeholder:"Enter text",rightIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_src_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{type:"lock",variant:"filled",size:16})};var AutoGrowWidth=Template.bind({});AutoGrowWidth.args={placeholder:"Auto width",autoGrowWidth:!0};var SuccessState=Template.bind({});SuccessState.args={placeholder:"Looks good!",state:"success",helperText:"All good"};var ErrorState=Template.bind({});ErrorState.args={placeholder:"Error input",state:"error",helperText:"Please enter a valid input"};var WarningState=Template.bind({});WarningState.args={placeholder:"Warning input",state:"warning",helperText:"This is a warning"};var InfoState=Template.bind({});InfoState.args={placeholder:"Info input",state:"info",helperText:"Additional info"};const __namedExportsOrder=["Default","Search","Disabled","WithLeftIcon","WithRightIcon","AutoGrowWidth","SuccessState","ErrorState","WarningState","InfoState"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...Default.parameters?.docs?.source}}},Search.parameters={...Search.parameters,docs:{...Search.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...Search.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...Disabled.parameters?.docs?.source}}},WithLeftIcon.parameters={...WithLeftIcon.parameters,docs:{...WithLeftIcon.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...WithLeftIcon.parameters?.docs?.source}}},WithRightIcon.parameters={...WithRightIcon.parameters,docs:{...WithRightIcon.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...WithRightIcon.parameters?.docs?.source}}},AutoGrowWidth.parameters={...AutoGrowWidth.parameters,docs:{...AutoGrowWidth.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...AutoGrowWidth.parameters?.docs?.source}}},SuccessState.parameters={...SuccessState.parameters,docs:{...SuccessState.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...SuccessState.parameters?.docs?.source}}},ErrorState.parameters={...ErrorState.parameters,docs:{...ErrorState.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...ErrorState.parameters?.docs?.source}}},WarningState.parameters={...WarningState.parameters,docs:{...WarningState.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...WarningState.parameters?.docs?.source}}},InfoState.parameters={...InfoState.parameters,docs:{...InfoState.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(''); // State to manage the input value\n\n  // Handler to update the value on change\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return <TwixtInputSingleLine {...args} value={value} onChange={handleChange} />;\n}",...InfoState.parameters?.docs?.source}}}}}]);