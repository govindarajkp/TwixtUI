"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[7939],{"./stories/_Deprecated/Tooltip.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomContent:()=>CustomContent,Default:()=>Default,EmojiTrigger:()=>EmojiTrigger,LongText:()=>LongText,NoChildren:()=>NoChildren,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tooltip_stories});var react=__webpack_require__("./node_modules/react/index.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var TwixtTooltip=function(param){var text=param.text,children=param.children,_useState=_sliced_to_array((0,react.useState)(!1),2),showTooltip=_useState[0],setShowTooltip=_useState[1];return react.createElement("div",null,react.createElement("div",{className:"relative inline-block",onMouseEnter:function(){setShowTooltip(!0)},onMouseLeave:function(){setShowTooltip(!1)}},react.createElement("span",{className:"cursor-pointer"},children),showTooltip&&react.createElement("div",{className:"w-32 absolute z-10 bg-gray-400 text-white text-xs rounded py-1 px-2 top-3 left-full mt-1"},text)))};const Tooltip=TwixtTooltip;TwixtTooltip.__docgenInfo={description:"",methods:[],displayName:"TwixtTooltip"};const Tooltip_stories={title:"_Deprecated/TwixtToolTip_DEPRECATED",component:Tooltip,argTypes:{text:{control:"text",description:"Text content of the tooltip",defaultValue:"Tooltip Content"},children:{control:null,description:"Child element triggering the tooltip",defaultValue:"Hover me"}}};var Template=function(args){return react.createElement(Tooltip,args)},Default=Template.bind({});Default.args={text:"Tooltip Content",children:"Hover me"};var CustomContent=Template.bind({});CustomContent.args={text:"Custom Tooltip Content",children:"Hover me"};var NoChildren=Template.bind({});NoChildren.args={text:"Tooltip Content",children:""};var LongText=Template.bind({});LongText.args={text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec lectus non sapien convallis fringilla ut sed risus. Integer congue, justo nec sagittis ullamcorper, odio arcu posuere lacus, quis pharetra risus erat vel urna.",children:"Hover me"};var EmojiTrigger=Template.bind({});EmojiTrigger.args={text:"Tooltip Content",children:"🛠️"};const __namedExportsOrder=["Default","CustomContent","NoChildren","LongText","EmojiTrigger"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <TwixtTooltip {...args} />",...Default.parameters?.docs?.source}}},CustomContent.parameters={...CustomContent.parameters,docs:{...CustomContent.parameters?.docs,source:{originalSource:"args => <TwixtTooltip {...args} />",...CustomContent.parameters?.docs?.source}}},NoChildren.parameters={...NoChildren.parameters,docs:{...NoChildren.parameters?.docs,source:{originalSource:"args => <TwixtTooltip {...args} />",...NoChildren.parameters?.docs?.source}}},LongText.parameters={...LongText.parameters,docs:{...LongText.parameters?.docs,source:{originalSource:"args => <TwixtTooltip {...args} />",...LongText.parameters?.docs?.source}}},EmojiTrigger.parameters={...EmojiTrigger.parameters,docs:{...EmojiTrigger.parameters?.docs,source:{originalSource:"args => <TwixtTooltip {...args} />",...EmojiTrigger.parameters?.docs?.source}}}}}]);